*****GIT DAY1*****
  1. Create a project
  2. Create a GITHUB REPOSITORY
      *go to GitHub
      *Repositories>Create New Repositories
  3. Create a FIRST COMMIT for the first time
ONLY ONCE  *git init
EVERY TIME *git add .
EVERY TIME *git commit -m "first commit"
ONLY ONCE  *git branch -M main
ONLY ONCE  *git remote add origin https://github.com/neslihanp/first_git_project.git
ONLY ONCE  *git push -u origin main
       **** Then your code should be pushed to GitHub. REFRESH YOUR PAGE TO SEE

  NOTE: git status  -> This is our friend. This can be used anytime to see progress

  4. Create a new SECOND COMMIT
       *Create a new java class under first_git_package  :MySecondClass
       *Create a new commit and push the code to GitHub
            *git add .
            *git commit -m "added my second java class"
            *git push

  5. ADDING SPECIFIC FILES
        *Create 2 JAVA classes : MyThirdClass, MyFourthClass
        *Create a commit with ONLY MyFourthClass
             gir add  "src/main/java/first_git_package/MtFourthClass.java"
             git commit -m "adding fourth clas"
             *git push

  6. GIT PULL
        *git pull is used to get the code from GitHub
        *git pull = git fetch + git merge

          NOTE: if got pull trows errors then use:
          git fetch
          git merge
        *NOW THAT WE HAVE OUR LOCAL UPDATED< THEN COMMIT THE CODES AND PUSH ALL TOGETHER
            *git add .
            *git commit -m "committing my codes"
            *git push

  NOTE: PULL BEFORE PUSH
        *git pull -> git add . -> git commit -m "message" -> git push

  ************* DAY 1 SUMMARY *******************************************

*****Prerequisites:
*Git Install
*GitHub account
*Git Authentication  (create token, add username and token so your verification is complete)

****First Time Git Push*********
*git init
FOLLOW THE INSTRUCTION IN OUR GITHUB REPOSITORY
Example:
        git init
        git add .
        git commit -m "first commit"
        git branch -M main
        git remote add origin http:github.com/neslihan/demo-repo.git
        git push
*NOTE: If you get error, just google the error message,...

****Second Time Git Push******
        git add .
        git commit -m "any message"
        git push

******GIT PULL
        git pull gets latest GitHub code in our local
        git pull = git fetch + get merge

******CONFLICT
When we try to merge(pull) the code that are in the -SAME spot but with DIFFERENT codes-

How to Resolve conflict?
    1)Manually fix: remove the illegal characters(error message),
    2)Create a new commit(add, commit)
    3)Push

*******To minimize conflict, we can clone the project, add our new code quickly, then commit and push
        git clone https://github.com/neslihanp/first_git_project.git
        add your new codes
        git add .
        git commit -m "message"
        git push

************************ DAY 2 ****************************
BRANCHING
git branch -a -> show me all branch
git branch 'ahmet' -> create ahmet branch
git checkout ahmet -> switched to ahmet branch
created a code : MySixth


***One more side branch flow
   Create a class " MySeventhClass"
   create a new commit and push
     git add .
     git commit -m "message"
     git push
   Then new codes will be in remote ahmet branch
   Then in GitHub expert or us will do:
       Pull Request(PR)(US or Expert)
       Then Code Review(Expert)
       Then Code Merge(Expert)
